### BUFFS ###
- BUFFS' timeLeft is number of events left, every event that ends lowers it by 1
- Drunk buff added, does nothing for now.

### Attribute stuff ###
CHR gives a discount on trainers and inn costs (-chr% to gold cost)
END gives more hp
INT gives more exp
LCK gives chance to crit


TODO:
- PUT IN ON PAGE LOAD: IF CURRENT CHAR IS SAVED: LOAD IT, SET PLAYERCHAR TO IT, DONT SHOW START BUTTON, SHOW CONTINUE
[X] IMPORT js to main instead of all in html, see below
[X] ADD INFO POPUP for players skill
[X] ADD END and DEX TRAINER
[X] INCORPORATE DMG AND DEF
[X] add simple EQ (weap / armor / trinket?)
- add skillcheck events (aka get something if a certain attribute is high enough)
[X] add skilltrainers that boosts skills
- icons for status?
- Running log that player can look at
- SAVE LOCALLY (and add continue)


// LOCAL STORAGE STUFF: (https://blog.logrocket.com/localstorage-javascript-complete-guide/)
How does localStorage work?
You’ve heard it repeatedly by now — localStorage stores data. And, if you’re storing data, it means you may need to retrieve it later. In this section, we’ll explore exactly how localStorage works. Here’s a rundown of how it works:

setItem(): Adds key and value to localStorage
getItem(): Retrieves/gets items from localStorage
removeItem(): Removes an item from localStorage
clear(): Clears all data from localStorage
key(): Passes a number to retrieve the key of a localStorage

Agoknee:  do not store every tiny item in a separate index of localStorage. utilize JSON.stringify() and JSON.parse() to store arrays/objects.



// DMG Calc stuff
// PKMN DMG CALC
function pkmnDmgCalc (skill, user, target) {
    let critical = 1
    let random = rndInt(85, 100)/100; console.log(random + ' ' + user.level)
    let power = skill.power
    let dmg = ( (2 * user.level / 5) * power * user.dmg/target.def ) / 50
    console.log(dmg)
    dmg = dmg * critical * random

    console.log(`${skill.name} did ${dmg} dmg`)
}
